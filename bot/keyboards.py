from __future__ import annotations

import html

from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from core.types import AnalysisResult


def moderator_keyboard(chat_id: int, msg_id: int) -> InlineKeyboardMarkup:
    payload = f"{chat_id}:{msg_id}"
    return InlineKeyboardMarkup([
        [
            InlineKeyboardButton("üö´ –°–ø–∞–º/–ë–∞–Ω", callback_data=f"kick:{payload}"),
            InlineKeyboardButton("‚úÖ –ù–µ —Å–ø–∞–º", callback_data=f"ham:{payload}"),
        ]
    ])


def format_moderator_card(
    user_name: str,
    text: str,
    msg_link: str,
    analysis: AnalysisResult
) -> str:
    preview = html.escape(text[:200] + ("‚Ä¶" if len(text) > 200 else ""))
    
    keyword = analysis.keyword_result
    tfidf = analysis.tfidf_result
    embedding = analysis.embedding_result
    
    card = (
        "üö® <b>–ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</b>\n\n"
        f"üë§ <b>–ê–≤—Ç–æ—Ä:</b> {html.escape(user_name)}\n"
        f"üîó <a href='{msg_link}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–æ–±—â–µ–Ω–∏—é</a>\n\n"
        f"üìä <b>–û—Ü–µ–Ω–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤:</b>\n"
    )
    
    # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –Ω–∞ embedding (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    if embedding and embedding.score != 0.5:
        card += f"  üß† <b>–°–µ–º–∞–Ω—Ç–∏–∫–∞ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç):</b> <b>{embedding.score:.0%}</b>\n"
        if embedding.details and embedding.details.get("reasoning"):
            reasoning = embedding.details["reasoning"][:60]
            card += f"     <i>{reasoning}...</i>\n"
    else:
        card += "  üß† <i>–°–µ–º–∞–Ω—Ç–∏–∫–∞: –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞</i>\n"
    
    card += f"  üî§ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: <b>{keyword.score:.0%}</b>\n"
    
    if keyword.details and keyword.details.get("matched_keywords"):
        keywords = ", ".join(keyword.details["matched_keywords"][:3])
        card += f"     <i>–ù–∞–π–¥–µ–Ω–æ: {keywords}</i>\n"
    
    card += f"  üìà TF-IDF –º–æ–¥–µ–ª—å: <b>{tfidf.score:.0%}</b>\n"
    
    avg_score = analysis.average_score
    card += f"\nüìä <b>–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: {avg_score:.0%}</b>\n\n"
    
    if avg_score >= 0.85:
        recommendation = "‚ö°Ô∏è <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –£–¥–∞–ª–∏—Ç—å –∏ –∑–∞–±–∞–Ω–∏—Ç—å"
    elif avg_score >= 0.70:
        recommendation = "‚ö†Ô∏è <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –í–µ—Ä–æ—è—Ç–Ω–æ —Å–ø–∞–º"
    elif avg_score >= 0.50:
        recommendation = "ü§î <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
    else:
        recommendation = "‚ÑπÔ∏è <b>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:</b> –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –Ω–µ —Å–ø–∞–º"
    
    card += f"{recommendation}\n\n"
    card += f"üí¨ <b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>\n{preview}"
    
    return card
